---
const menuItems = [
  { text: "Inicio", href: "#" },
  { text: "Nosotros", href: "#nosotros" },
  { text: "Servicios", href: "#servicios" },
  { text: "Productos", href: "#productos" },
  { text: "Contacto", href: "#contacto" },
];
---

<header class="fixed w-full z-50" id="main-header">
  <div
    class="bg-white/90 dark:bg-dark-surface border-b border-gray-100 dark:border-dark-border backdrop-blur-md"
  >
    <div class="container mx-auto px-4">
      <nav class="flex items-center justify-between h-20">
        <!-- Logo -->
        <div class="relative z-10">
          <a
            href="/"
            class="text-2xl md:text-3xl font-bold relative group overflow-hidden inline-block"
          >
            <span class="text-primary-600 dark:text-primary-500">Acrie</span>
            <span class="text-gray-900 dark:text-dark-text">stilos</span>
          </a>
        </div>

        <!-- Menú Desktop -->
        <div class="hidden lg:flex items-center space-x-2">
          {
            menuItems.map((item) => (
              <a
                href={item.href}
                class="relative px-4 py-2 group text-gray-700 dark:text-dark-muted hover:text-primary-600 dark:hover:text-primary-500 transition-colors duration-300"
              >
                <span class="relative z-10">{item.text}</span>
                <div class="absolute inset-0 w-full h-full transition-transform duration-300 transform scale-0 group-hover:scale-100">
                  <div class="absolute inset-0 bg-gray-50 dark:bg-dark-surface rounded-lg" />
                </div>
              </a>
            ))
          }
          <!-- Botón de tema -->
          <button
            id="theme-toggle"
            class="p-2 rounded-lg hover:bg-gray-50 dark:hover:bg-dark-surface transition-colors"
            aria-label="Cambiar tema"
          >
            <!-- Sol -->
            <svg
              class="w-6 h-6 text-amber-500 dark:hidden"
              fill="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                d="M12 2.25a.75.75 0 01.75.75v2.25a.75.75 0 01-1.5 0V3a.75.75 0 01.75-.75zM7.5 12a4.5 4.5 0 119 0 4.5 4.5 0 01-9 0zM18.894 6.166a.75.75 0 00-1.06-1.06l-1.591 1.59a.75.75 0 101.06 1.061l1.591-1.59zM21.75 12a.75.75 0 01-.75.75h-2.25a.75.75 0 010-1.5H21a.75.75 0 01.75.75zM17.834 18.894a.75.75 0 001.06-1.06l-1.59-1.591a.75.75 0 10-1.061 1.06l1.59 1.591zM12 18a.75.75 0 01.75.75V21a.75.75 0 01-1.5 0v-2.25A.75.75 0 0112 18zM7.758 17.303a.75.75 0 00-1.061-1.06l-1.591 1.59a.75.75 0 001.06 1.061l1.591-1.59zM6 12a.75.75 0 01-.75.75H3a.75.75 0 010-1.5h2.25A.75.75 0 016 12zM6.697 7.757a.75.75 0 001.06-1.06l-1.59-1.591a.75.75 0 00-1.061 1.06l1.59 1.591z"
              ></path>
            </svg>
            <!-- Luna -->
            <svg
              class="w-6 h-6 text-primary-500 hidden dark:block"
              fill="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                d="M9.528 1.718a.75.75 0 01.162.819A8.97 8.97 0 009 6a9 9 0 009 9 8.97 8.97 0 003.463-.69.75.75 0 01.981.98 10.503 10.503 0 01-9.694 6.46c-5.799 0-10.5-4.701-10.5-10.5 0-4.368 2.667-8.112 6.46-9.694a.75.75 0 01.818.162z"
              ></path>
            </svg>
          </button>
        </div>

        <!-- Botón Menú Móvil -->
        <button
          id="mobile-menu-button"
          class="lg:hidden relative w-10 h-10 flex items-center justify-center"
          aria-label="Menú"
        >
          <div class="menu-icon">
            <span></span>
            <span></span>
            <span></span>
          </div>
        </button>
      </nav>
    </div>
  </div>

  <!-- Menú Móvil -->
  <div
    id="mobile-menu"
    class="fixed inset-0 bg-white/80 dark:bg-slate-950/80 backdrop-blur-lg transform translate-x-full transition-transform duration-300 lg:hidden"
  >
    <div class="h-full flex flex-col">
      <div class="flex justify-end p-4">
        <button
          id="close-menu"
          class="w-10 h-10 flex items-center justify-center text-gray-500"
        >
          <svg
            class="w-6 h-6"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>
      <div class="flex-1 flex flex-col items-center justify-center space-y-8">
        {
          menuItems.map((item) => (
            <a
              href={item.href}
              class="text-2xl font-medium text-slate-800 dark:text-slate-200 hover:text-blue-600 dark:hover:text-blue-400 transition-colors mobile-menu-item"
            >
              {item.text}
            </a>
          ))
        }
        <a
          href="#contacto"
          class="mobile-cta text-2xl font-medium text-blue-600 dark:text-blue-400"
        >
          Contáctanos
        </a>
      </div>
    </div>
  </div>
</header>

<style>
  .glass-nav {
    @apply fixed w-full bg-white dark:bg-dark-surface border-b border-gray-100 dark:border-dark-border;
    transform: translateY(0);
    transition: all 0.3s ease;
  }

  header.elevated .glass-nav {
    @apply shadow-sm;
  }

  .menu-icon {
    @apply w-6 relative;
  }

  .menu-icon span {
    @apply block h-0.5 bg-slate-600 dark:bg-slate-300 rounded-full transition-all duration-300;
  }

  .menu-icon span:not(:last-child) {
    @apply mb-1.5;
  }

  .menu-open .menu-icon span:nth-child(1) {
    transform: translateY(8px) rotate(45deg);
  }

  .menu-open .menu-icon span:nth-child(2) {
    opacity: 0;
  }

  .menu-open .menu-icon span:nth-child(3) {
    transform: translateY(-8px) rotate(-45deg);
  }

  .mobile-menu-item {
    position: relative;
    opacity: 0;
    transform: translateY(20px);
    transition: all 0.3s ease;
  }

  #mobile-menu.menu-open .mobile-menu-item {
    opacity: 1;
    transform: translateY(0);
  }

  #mobile-menu.menu-open .mobile-menu-item:nth-child(1) {
    transition-delay: 0.1s;
  }
  #mobile-menu.menu-open .mobile-menu-item:nth-child(2) {
    transition-delay: 0.2s;
  }
  #mobile-menu.menu-open .mobile-menu-item:nth-child(3) {
    transition-delay: 0.3s;
  }
  #mobile-menu.menu-open .mobile-menu-item:nth-child(4) {
    transition-delay: 0.4s;
  }
  #mobile-menu.menu-open .mobile-menu-item:nth-child(5) {
    transition-delay: 0.5s;
  }
  #mobile-menu.menu-open .mobile-cta {
    transition-delay: 0.6s;
  }
</style>

<script>
  const header = document.getElementById("main-header");
  const mobileMenu = document.getElementById("mobile-menu");
  const menuButton = document.getElementById("mobile-menu-button");
  const closeButton = document.getElementById("close-menu");
  let lastScroll = 0;
  let isScrolled = false;

  // Manejo del scroll con debounce para mejor rendimiento
  let scrollTimeout: number;
  const handleScroll = () => {
    if (scrollTimeout) {
      window.cancelAnimationFrame(scrollTimeout);
    }

    scrollTimeout = window.requestAnimationFrame(() => {
      const currentScroll = window.pageYOffset;

      // Solo aplicamos elevated si el scroll es significativo
      if (currentScroll > 100 && !isScrolled) {
        header?.classList.add("elevated");
        isScrolled = true;
      } else if (currentScroll <= 100 && isScrolled) {
        header?.classList.remove("elevated");
        isScrolled = false;
      }

      // Ocultamos el header solo si el scroll es muy rápido y significativo
      if (currentScroll <= 0) {
        header?.classList.remove("header-hidden");
      } else if (
        currentScroll > lastScroll &&
        currentScroll > 500 &&
        Math.abs(currentScroll - lastScroll) > 50
      ) {
        header?.classList.add("header-hidden");
      } else {
        header?.classList.remove("header-hidden");
      }

      lastScroll = currentScroll;
    });
  };

  window.addEventListener("scroll", handleScroll, { passive: true });

  // Manejo del menú móvil
  const toggleMenu = () => {
    mobileMenu?.classList.toggle("translate-x-full");
    mobileMenu?.classList.toggle("menu-open");
    document.body.classList.toggle("overflow-hidden");
    menuButton?.classList.toggle("menu-open");
  };

  menuButton?.addEventListener("click", toggleMenu);
  closeButton?.addEventListener("click", toggleMenu);

  // Cerrar menú al hacer click en un enlace
  document.querySelectorAll("#mobile-menu a").forEach((link) => {
    link.addEventListener("click", () => {
      toggleMenu();
    });
  });

  // Manejo del tema
  const theme = (() => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme") || "light";
    }
    if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
      return "dark";
    }
    return "light";
  })();

  if (theme === "light") {
    document.documentElement.classList.remove("dark");
  } else {
    document.documentElement.classList.add("dark");
  }

  window.localStorage.setItem("theme", theme);

  const handleToggleClick = () => {
    const element = document.documentElement;
    element.classList.toggle("dark");

    const isDark = element.classList.contains("dark");
    localStorage.setItem("theme", isDark ? "dark" : "light");
  };

  document
    .getElementById("theme-toggle")
    ?.addEventListener("click", handleToggleClick);
</script>
